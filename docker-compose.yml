version: "3.0"
services:
  #  reverser-proxy는 로컬에서는 사용하지 않음
  reverse-proxy:
    image: nginx
    container_name: at_ticket-reverse-proxy
    ports:
      - 80:80
      - 443:443
    restart: always
    # SSL 적용
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/api/fullchain.pem:/etc/letsencrypt/live/api.atticket.o-r.kr/fullchain.pem
      - ./ssl/api/privkey.pem:/etc/letsencrypt/live/api.atticket.o-r.kr/privkey.pem
      - ./ssl/keycloak/fullchain.pem:/etc/letsencrypt/live/keycloak.atticket.o-r.kr/fullchain.pem
      - ./ssl/keycloak/privkey.pem:/etc/letsencrypt/live/keycloak.atticket.o-r.kr/privkey.pem

  database:
    image: mysql
    container_name: at_ticket-db
    expose:
      - 3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    # DB 시작 시 초기화 스크립트 실행
    volumes:
      - ./mysql-init-files/:/docker-entrypoint-initdb.d/

  product:
    build:
      context: .
      dockerfile: ./product/Dockerfile
    container_name: at_ticket-product
    expose:
      - 8000
    #    로컬에서 배포할때
    #    ports:
    #      - 8000:8000
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    # DB가 실행되기 전까진 어플리케이션이 실행되지 않도록 설정
    depends_on:
      database:
        condition: service_healthy

  reservation:
    build:
      context: .
      dockerfile: ./reservation/Dockerfile
    container_name: at_ticket-reservation
    expose:
      - 8100
    #    로컬에서 배포할 때
    #    ports:
    #      - 8100:8100
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      database:
        condition: service_healthy

  payment:
    build:
      context: .
      dockerfile: ./payment/Dockerfile
    container_name: at_ticket-payment
    #    로컬에서 배포할 때
    #    ports:
    #      - 8200:8200
    expose:
      - 8200
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      database:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: at_ticket-keycloak
    #    로컬에서 배포할 때
    #    ports:
    #      - 8080:8080
    expose:
      - 8080
    #    로컬에서 배포할 때
    #    command: start-dev --features=preview
    command: start --features=preview
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=atticket
    volumes:
      - ./keycloak/keycloak.conf:/opt/keycloak/conf/keycloak.conf
    depends_on:
      database:
        condition: service_healthy
